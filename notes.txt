TODO
    Figure out where to store results in the cloud
        -Append only
        -Semi structured
    Track flakiness details
    Look for
        ZIO_TEST_GITHUB_TOKEN
        ZIO_TEST_GITHUB_URL
    to decide when to record this data
    See if format used by existing test report data is supported by tooling outside of SBT
        -Is XML format extensible?


Track Test Results over time

Decide between:

    ExecutionEvent.Test[+E](
        labelsReversed: List[String],
        test: Either[TestFailure[E], TestSuccess],
        annotations: TestAnnotationMap,
        ancestors: List[SuiteId],
        duration: Long,
        id: SuiteId
      )

      Pros:
        - Would be able to write results to file in realtime, leveraging our context automatically

    OR

    ZTestEvent(
      fullyQualifiedName: String,
      selector: Selector,
      status: Status,
      maybeThrowable: Option[Throwable],
      duration: Long,
      fingerprint: Fingerprint
    )

    Pros
      - Might be able to use existing sbt test reporting plugins?
    Cons
      - We have boiled away some of the ZIO-specific knowledge once we're in this shape

    OR

    Some new, more focused structure.

Every time the tests run, the results are written to a directory/file

Capabilities:

- def compare(original: Branch, new: Branch): PerformanceDiff


Existing test report generated by SBT:
/Users/bfrasure/Repositories/zio/test-sbt/jvm/target/test-reports/TEST-zio.test.sbt.ZTestFrameworkZioSpec.xml

Questions:
- Serialization format?
- Any reason to track performance of suites, instead of individual tests?
- Timestamp results? More generally - do we want to keep a list of results, or just the latest?